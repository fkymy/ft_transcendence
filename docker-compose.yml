version: '3.8'
services:
  api:
    container_name: api
    build:
      context: ./backend/api/
        # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile.prod
    tty: true
    ports:
      - 3000:3000
    volumes:
      - ./backend/api:/api
      - ./upload/:/upload
      - /api/node_modules
        #- node_modules:/api/node_modules
        #- dist:/api/dist
    restart: on-failure
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3001:3001
    tty: true
    restart: on-failure
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - api

  db:
    image: postgres:12.6
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ft_transcendence
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
      TZ: Asia/Tokyo
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    restart: always
    depends_on:
      - db

volumes:
  # node_modules:
  # dist:
  postgres:
